PART
{
    // --- general parameters ---
    name = mk2lcb4m
    module = Part
    author = Yarbrough08, zer0Kerbal

    // --- asset parameters ---
    MODEL
    {
        model = YARD/MKII-L/Assets/MK2LCB4m
    }
    scale = 1.0
    rescaleFactor = 1.0

    // --- node definitions ---
    node_stack_top = 0.0, 2.25, 0.0, 0.0, 1.0, 0.0, 2
    node_stack_bottom = 0.0, -2.25, 0.0, 0.0, -1.0, 0.0, 2

    // attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
    attachRules = 1,0,1,1,0

    // --- editor parameters ---
    TechRequired = start
    entryCost = 600
    cost = 300
    category = Payload // 2
    subcategory = 0
    title = Mk. II-L Cargo Bay 4.5m
    manufacturer = Yarbrough Aerospace Research & Development
    description = A cargo bay for the Mk. II-L Fuselage System, designed with solar panels in the doors. Even though kerbal engineers swore to us that they were indestructible, they do seem to break often for no reason...
	tags = contain convey equipment freight hold hollow payload (stor transport utility yard mk2 mk2l yarbrough08 solar elect 
    // #autoLOC_500902 //#autoLOC_500902 = contain convey equipment freight hold hollow payload (stor transport utility

    // --- standard part parameters ---
    mass = 0.75 // 1.125
    
    dragModelType = default
    maximum_drag = 0.3
    minimum_drag = 0.2
    angularDrag = 3
    
    crashTolerance = 50 // 30
    breakingForce = 50
    breakingTorque = 50
    
    maxTemp = 2000 // 3000
	thermalMassModifier = 2.0
	emissiveConstant = 0.95
	heatConductivity = 0.04 // 1/3 the default
    
    fuelCrossFeed = True

    //MODULE
    //{
    //    name = ModuleAnimateGeneric
    //    animationName = CBAnimation
    //    startEventGUIName = Open cargo bay doors
    //    endEventGUIName = Close cargo bay doors
    //    toggleActionName = Toggle cargo bay doors
    //    availableInEVA = True
    //    EVArange = 10
    //}

    MODULE
    {
        name = ModuleDeployableSolarPanel
        animationName = CBAnimation
        sunTracking = False
        raycastTransformName = MK2CBSolar
        pivotName = MK2CBSolar
        isBreakable = false

		extendActionName = #autoLOC_6001805 //#autoLOC_6001805 = Extend <<1>>
		retractActionName = #autoLOC_6001806 //#autoLOC_6001806 = Retract <<1>>
		extendpanelsActionName = #autoLOC_6001807 //#autoLOC_6001807 = Toggle <<1>>
        // secondaryTransformName = panel1
		// breakName = sunParent

        resourceName = ElectricCharge
        chargeRate = 27.00
        // powerCurve
        // {
            // key = 206000000000 0 0 0
            // key = 13599840256 1 0 0
            // key = 68773560320 0.5 0 0
            // key = 0 10 0 0
        // }
    }

// ElectricCharge
	RESOURCE
	{
		name = ElectricCharge
		amount = 100
		maxAmount = 100
	}
    
	MODULE
	{
		name = ModuleLiftingSurface
		useInternalDragModel = False
		deflectionLiftCoeff = 0.35
		dragAtMaxAoA = 0.2
		dragAtMinAoA = 0.1
	}

	// MODULE
	// {
		// name = ModuleAnimateGeneric
		// animationName = CBAnimation // Mk2BayS
		// startEventGUIName = #autoLOC_502051 //#autoLOC_502051 = Close
		// endEventGUIName = #autoLOC_502069 //#autoLOC_502069 = Open
		// actionGUIName = #autoLOC_502077 //#autoLOC_502077 = Toggle Bay Doors
		// allowDeployLimit = true
		// revClampDirection = false
		// revClampSpeed = true
		// revClampPercent = true			
	// }

	MODULE
	{
		name = ModuleCargoBay
		DeployModuleIndex = 1
		closedPosition = 1
		lookupRadius = 1.15
		partTypeName = Cargo bay
		
		nodeOuterForeID = top
		nodeOuterAftID = bottom
		nodeInnerForeID = top2
		nodeInnerAftID = bottom2
	}


	MODULE
	{
		name = ModuleColorChanger
		shaderProperty = _EmissiveColor
		animRate = 0.8
		animState = false
		useRate = true
		toggleInEditor = true
		toggleInFlight = true
		toggleInFlight = true
		unfocusedRange = 5
		toggleName = #autoLOC_502011 //#autoLOC_502011 = Toggle Lights
		eventOnName = #autoLOC_502012 //#autoLOC_502012 = Lights On
		eventOffName = #autoLOC_502013 //#autoLOC_502013 = Lights Off
		toggleAction = True
		defaultActionGroup = Light
		redCurve
		{
			key = 0 0 0 3
			key = 1 1 0 0
		}
		greenCurve
		{
			key = 0 0 0 1
			key = 1 1 1 0
		}
		blueCurve
		{
			key = 0 0 0 0
			key = 1 0.7 1.5 0
		}
		alphaCurve
		{
			key = 0 1
		}
	}
}
